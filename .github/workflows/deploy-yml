name: Dev Deploy To EC2

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository check out
        uses: actions/checkout@v4

      - name: JDK 17 install
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Create application.yml
        run: echo "${{ secrets.APPLICATION_PROPERTIES_DEV }}" > ./src/main/resources/application.yml

      - name: Test & Build
        run: |
          chmod +x gradlew
          ./gradlew clean build

      - name: AWS Credentials Configuration for Resource Access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Dockerfile 기반으로 이미지 생성
      - name: Create SpringBoot Docker image
        run: docker build -t dev-codeit-server .

      - name: Add Docker image Tag
        run: docker tag dev-codeit-server ${{ steps.login-ecr.outputs.registry }}/dev-codeit-server:latest

      - name: Push Docker image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/dev-codeit-server:latest

      - name: Compression
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts

      - name: Upload Project to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://codeit-local-bucket/$GITHUB_SHA.tar.gz

      - name: Deploy project code to EC2 using CodeDeploy
        run: aws deploy create-deployment
          --application-name codeit-refactor-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name dev-codeit-group
          --s3-location bucket=dev-codeit-4,bundleType=tgz,key=$GITHUB_SHA.tar.gz